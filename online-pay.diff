diff --git a/koha-tmpl/intranet-tmpl/prog/en/modules/members/pay.tt b/koha-tmpl/intranet-tmpl/prog/en/modules/members/pay.tt
index a4e4568a06..df9be97854 100644
--- a/koha-tmpl/intranet-tmpl/prog/en/modules/members/pay.tt
+++ b/koha-tmpl/intranet-tmpl/prog/en/modules/members/pay.tt
@@ -61,16 +61,23 @@
 [% FOREACH line IN accounts %]
 <tr>
     <td>
-    [% IF ( line.amountoutstanding > 0 ) %]
+    [% IF ( line.amountoutstanding > 0 ) and (!(line.debit_type_code.match("^.*_INVOICED$"))) and ((line.status != "UNRETURNED") or CAN_user_updatecharges_writeoff) %]
         <input class="cb" type="checkbox" checked="checked" name="incl_par_[% line.accountlines_id | html %]" />
+    [% ELSE %]
+        <input class="cb" type="checkbox" disabled="true" name="incl_par_[% line.accountlines_id | html %]" />
     [% END %]
     </td>
     <td class="actions">
     [% IF ( line.amountoutstanding > 0 ) %]
+        [% IF (!(line.debit_type_code.match("^.*_INVOICED$"))) %]
         <button type="submit" class="btn btn-default btn-xs" name="pay_indiv_[% line.accountlines_id | html %]" value="Pay">Pay</button>
+        [% END %]
         [% IF CAN_user_updatecharges_writeoff %]
             <button type="submit" class="btn btn-default btn-xs" name="wo_indiv_[% line.accountlines_id | html %]" value="Write off">Write off</button>
         [% END %]
+        [% IF (CAN_user_updatecharges_writeoff and (line.debit_type_code == "A" or line.debit_type_code == "LOST" or ( line.debit_type_code == "OVERDUE" and line.status != "UNRETURNED"))) %]
+            <button type="submit" class="btn btn-default btn-xs" id="markinv" name="markinv_indiv_[% line.accountlines_id | html %]" value="Mark as invoiced">Mark as invoiced</button>
+        [% END %]
     [% END %]
     <input type="hidden" name="itemnumber[% line.accountlines_id | html %]" value="[% line.itemnumber | html %]" />
     <input type="hidden" name="description[% line.accountlines_id | html %]" value="[% line.description | html %]" />
@@ -134,10 +141,8 @@
 
 </table>
 <fieldset class="action">
-<input type="submit" id="paycollect" name="paycollect"  value="Pay amount" class="submit" />
 <input type="submit" id="payselected" name="payselected"  value="Pay selected" class="submit" />
-[% IF CAN_user_updatecharges_writeoff %]<input type="submit" name="woall"  id="woall" value="Write off all" class="submit" />
-<input type="submit" id="writeoff-selected" name="writeoff_selected"  value="Write off selected" class="submit" />[% END %]
+[% IF CAN_user_updatecharges_writeoff %]<input type="submit" name="woall"  id="woall" value="Write off all" class="submit" />[% END %]
 <a class="cancel" href="/cgi-bin/koha/members/boraccount.pl?borrowernumber=[% patron.borrowernumber | html %]">Cancel</a>
 </fieldset>
 </form>
@@ -224,6 +229,14 @@
                 'sorting': [[ 3, "asc" ]],
                 "autoWidth": false
             }, columns_settings );
+                $("#markinv").click(function(event){
+                var msg = _("Are you sure you want to mark this payment as invoiced?" );
+                var answer = confirm(msg);
+                    if (!answer){
+                        event.preventDefault();
+                    }
+            });
+
         });
     </script>
 [% END %]
diff --git a/koha-tmpl/opac-tmpl/bootstrap/en/includes/account-table.inc b/koha-tmpl/opac-tmpl/bootstrap/en/includes/account-table.inc
index 8f38a70d7d..f694655a2a 100644
--- a/koha-tmpl/opac-tmpl/bootstrap/en/includes/account-table.inc
+++ b/koha-tmpl/opac-tmpl/bootstrap/en/includes/account-table.inc
@@ -6,6 +6,7 @@
         <thead>
             <tr>
                 [% IF ENABLE_OPAC_PAYMENTS %]<th>&nbsp;</th>[% END %]
+                <th style="text-align:center"><input id="check-all-payable" type="checkbox"></input></th>
                 <th class="title-string">Date</th>
                 <th>Type</th>
                 <th>Description</th>
@@ -17,6 +18,12 @@
         <tbody>
             [% FOREACH ACCOUNT_LINE IN ACCOUNT_LINES %]
                 [% IF ACCOUNT_LINE.amountoutstanding > 0 || ACCOUNT_LINE.amountoutstanding < 0 %]<tr class="outstanding">[% ELSE %]<tr>[% END%]
+                    <td style="text-align:center"><input aria-label="[% ACCOUNT_LINE.item.biblio.title| html %] [% ACCOUNT_LINE.item.biblio.subtitle| html %] [% ACCOUNT_LINE.amountoutstanding | $Price %]" class="account-line-checkbox" data-accountLineID="[% ACCOUNT_LINE.accountlines_id | html %]" 
+                                data-payment-status="[% ACCOUNT_LINE.status | html %]" data-item-itype="[% ACCOUNT_LINE.item.itype %]"
+                                data-payment-type="[% ACCOUNT_LINE.debit_type_code | html %]"  data-title="[% ACCOUNT_LINE.item.biblio.title| html %]"  
+                                data-subtitle="[% ACCOUNT_LINE.item.biblio.subtitle| html %]" data-amount="[% ACCOUNT_LINE.amountoutstanding | $Price %]" 
+                                data-library-code="[% ACCOUNT_LINE.item.homebranch %]" data-misc="" data-barcode="[% ACCOUNT_LINE.item.barcode %]" type="checkbox">
+                    </td>
                     [% IF ENABLE_OPAC_PAYMENTS %]
                         <td>
                             [% IF ACCOUNT_LINE.amountoutstanding > 0 %]
@@ -33,10 +40,11 @@
                     <td>
                         [%- IF ACCOUNT_LINE.payment_type %][% AuthorisedValues.GetByCode('PAYMENT_TYPE', ACCOUNT_LINE.payment_type, 1) | html %][% END %]
                         [%- IF ACCOUNT_LINE.description %][% ACCOUNT_LINE.description | html %][% END %]
-                        [% IF ACCOUNT_LINE.itemnumber %]([% ACCOUNT_LINE.item.biblio.title | html %])[% END %]
+                        [% IF ACCOUNT_LINE.itemnumber %]([% ACCOUNT_LINE.item.biblio.title | html %] [% ACCOUNT_LINE.item.biblio.subtitle | html %])[% END %]
                     </td>
                     [% IF ( ACCOUNT_LINE.is_credit ) %]<td class="credit">[% ACCOUNT_LINE.amount * -1 | $Price %][% ELSE %]<td class="debit">[% ACCOUNT_LINE.amount | $Price %][% END %]</td>
                     [% IF ( ACCOUNT_LINE.is_credit ) %]<td class="credit">[% ACCOUNT_LINE.amountoutstanding * -1 | $Price %][% ELSE %]<td class="debit">[% ACCOUNT_LINE.amountoutstanding | $Price %][% END %]</td>
+          
                 </tr>
             [% END %]
         </tbody>
@@ -46,10 +54,10 @@
                 [%- IF ENABLE_OPAC_PAYMENTS -%]
                     [%- SET COLSPAN = 5 -%]
                 [%- ELSE -%]
-                    [%- SET COLSPAN = 4 -%]
+                    [%- SET COLSPAN = 3 -%]
                 [%- END -%]
                 <th class="sum" colspan="[% COLSPAN | html %]">Total due</th>
-                <td class="sum">[% total | $Price %]</td>
+                <td class="sum" colspan="2">[% total | $Price %]</td>
             </tr>
             [% IF outstanding_credits.total_outstanding < 0 %]
             [% FOREACH outstanding_credit IN outstanding_credits %]
diff --git a/koha-tmpl/opac-tmpl/bootstrap/en/modules/opac-account.tt b/koha-tmpl/opac-tmpl/bootstrap/en/modules/opac-account.tt
index 7375ca0ac1..06f82dddb9 100644
--- a/koha-tmpl/opac-tmpl/bootstrap/en/modules/opac-account.tt
+++ b/koha-tmpl/opac-tmpl/bootstrap/en/modules/opac-account.tt
@@ -12,11 +12,12 @@
 [% BLOCK cssinclude %]
     [% Asset.css("css/datatables.css") | $raw %]
 [% END %]
+
+
 </head>
 
 [% INCLUDE 'bodytag.inc' bodyid='opac-account' bodyclass='scrollto' %]
 [% INCLUDE 'masthead.inc' %]
-
 <div class="main">
     <ul class="breadcrumb">
         <li><a href="/cgi-bin/koha/opac-main.pl">Home</a> <span class="divider">&rsaquo;</span></li>
@@ -68,6 +69,15 @@
 
                     [% PROCESS 'account-table.inc' ACCOUNT_LINES = ACCOUNT_LINES, ENABLE_OPAC_PAYMENTS = ENABLE_OPAC_PAYMENTS, plugins = plugins %]
 
+                    [% IF  ACCOUNT_LINES.count > 0  %]
+                    <strong>Amount to pay: <span class="amount-payable"></span> SEK</strong>
+                    <p>(Debt after payment has been made: <span class="amount-debt-left-after-payment"></span> SEK)</p>
+                    <form method="post" action="https://betala.ub.gu.se/Koha/Payment">
+                        <input type="submit" class="btn btn-default" value="Pay selected fines"></input>
+                        <textarea  id="ub-debug-json" type="hidden" name="payment_data" style="width:80%; min-height:400px; display:none;"></textarea>
+                    </form>
+                    [% END %]
+
                 </div> <!-- / #useraccount -->
             </div> <!-- / .span10 -->
         </div> <!-- / .row-fluid -->
@@ -84,10 +94,151 @@ $( document ).ready(function() {
     var txtActivefilter = _("Filter paid transactions");
     var txtInactivefilter = _("Show all transactions");
 
+   
+    let paydata = {};
+    let returnURL = window.location.href + "?language=" + "[% current_lang %]";
+    let callbackURL = "[% staffClientBaseURL %]" + "/cgi-bin/koha/svc/onlinepayment";  // window.location.href;
+
+    function getAmountPayable(payments) {
+        var amounts = payments.map(o => {return o['amount']});
+        if (amounts.length) {
+            return amounts.reduce((total, num) => total + num);
+        }
+        return 0;
+    }
+
+
+    function getDebtTotal() {
+        let total = 0;
+        $(".account-line-checkbox").each(function(index, item) {
+            total += parseFloat($(item).attr("data-amount").replace(/\s/g, ""));
+        });
+        return total;
+    }
+
+    function getPaymentName(type) {
+        let payment_type = {};
+        if ("[% current_lang %]" === "en") {
+            payment_type = { // TBD 
+                "A"             : "A MAPPED EN",
+                "LOST"          : "LOST MAPPED EN",
+                "MANUAL"        : "MANUAL MAPPED EN", 
+                "OVERDUE"       : "OVEERDUE MAPPED EN",
+                "PROCESSING"    : "PROCESSING_MAPPED EN"
+            }
+        }
+        else {
+            payment_type = { // TBD 
+                "A"             : "A MAPPED SV",
+                "LOST"          : "LOST MAPPED SV",
+                "MANUAL"        : "MANUAL MAPPED SV", 
+                "OVERDUE"       : "OVEERDUE MAPPED SV",
+                "PROCESSING"    : "PROCESSING_MAPPED SV"
+            }
+        }
+        return payment_type[type]
+    }
+
+    function getSimpleDebitType(type) {
+        if (type === "OVERDUE") {
+            return "fine";
+        }
+        return "media";
+    }
+
+    function getLibraryGroup(id, payment_type) {
+        let branches = {
+            "G": [44, 60, 62],
+            "Gm": [40, 43, 49, 66],
+            "Gpek": [42, 47, 48, 50]
+            
+        }
+        let librarygroup = null;
+        var found = Object.entries(branches).some((item) => {
+            return item[1].some(function(el) {
+                if (el === parseInt(id)) {
+                    librarygroup = item[0];
+                    return item[0];
+                }
+            });
+        })
+        if (found)  {
+            return librarygroup;
+        }
+        return "Gpek";
+    } 
+    
+
+    $("#check-all-payable").bind("change", function(val) {
+        if ($("#check-all-payable").prop("checked")) {
+            $(".account-line-checkbox:not(:disabled)").prop("checked", true).trigger("change");
+            return;
+        }
+        $(".account-line-checkbox:not(:disabled)").prop("checked", false).trigger("change");
+    });
+
+    $(".account-line-checkbox").bind("change", function() {
+        paydata.uid = "[% guid %]";
+        paydata.language = "[% current_lang %]"; // MAYBE NOT NEEDED IF RETURN_URL CONTAINS LANGUAGE
+        paydata.return_url = returnURL;
+        paydata.callback_url = callbackURL;
+        let payments = [];
+        $(".account-line-checkbox:checked").each(function() {
+            let fullTitle =  `${$(this).attr('data-title')}  ${$(this).attr('data-subtitle')}` // THIS MIGHT CHANGE 
+            let paymentRow = {
+                account_id          :       parseInt($(this).attr('data-accountLineID')),
+                amount              :       parseFloat($(this).attr('data-amount').replace(/\s/g, "")),
+                library_group       :       getLibraryGroup($(this).attr('data-library-code'),  $(this).attr('data-item-itype')),  // ITEM.ITYPES
+                text                :       $(this).attr('data-barcode'), // STILL UNCLEAR WHAT IT SHOULD CONTAIN
+                title               :       fullTitle,
+                debit_type          :       getSimpleDebitType($(this).attr('data-payment-type')),
+                debit_title         :       getPaymentName($(this).attr('data-payment-type')),
+            }
+            payments.push(paymentRow);
+        });
+        paydata.payments = payments;
+        let amountPayable = getAmountPayable(payments);
+        $(".amount-payable").text(amountPayable);
+        $(".amount-debt-left-after-payment").text(getDebtTotal() - amountPayable);
+        $("#ub-debug-json").val((JSON.stringify(paydata, undefined, 4)));
+    });
+    
+    // disable payment-rows 
+    $(".account-line-checkbox").each(function(index, item) {
+        if (parseFloat(item.dataset.amount) <= 0) {
+            return;
+        }
+        if ((item.dataset.paymentType === "LOST")) {
+            return;
+        }
+        if ((item.dataset.paymentType === "A")) {
+            return;
+        }
+        if ((item.dataset.paymentType === "OVERDUE") && (item.dataset.paymentStatus === "RETURNED"))  {
+            return;
+        }
+        if ((item.dataset.paymentType === "OVERDUE") && (item.dataset.paymentStatus === "LOST"))  {
+            return;
+        }
+        if ((item.dataset.paymentType === "OVERDUE") && (item.dataset.paymentStatus === "RENEWED"))  {
+            return;
+        }
+        item.disabled = true;
+    });
+    $("#check-all-payable").prop("checked", true);
+    $(".account-line-checkbox:not(:disabled)").prop("checked", true).trigger("change");
+
     var fines_table = $("#finestable").dataTable($.extend(true, {}, dataTablesDefaults, {
         "columnDefs": [
              { "type": "title-string", "targets" : [ "title-string" ] }
          ],
+        "columns": [
+            { "orderable": false },
+            null,
+            null,
+            null,
+            null
+        ],
          [% IF ENABLE_OPAC_PAYMENTS %]
          "order": [[ 1, "desc" ]],
          [% ELSE %]
@@ -96,7 +247,7 @@ $( document ).ready(function() {
          "dom": '<"#filter_p">',
     } ));
 
-    $("#filter_p").html('<p><a href="#" id="filter_paid"><i class="fa fa-filter"></i> '+txtActivefilter+'</a>');
+    /*$("#filter_p").html('<p><a href="#" id="filter_paid"><i class="fa fa-filter"></i> '+txtActivefilter+'</a>');
     $('#filter_paid').click(function(e) {
         e.preventDefault();
         if ($(this).hasClass('filtered')) {
@@ -108,7 +259,7 @@ $( document ).ready(function() {
         }
         fines_table.fnFilter(filteredValue, -1, true, false);
         $(this).toggleClass('filtered');
-    });
+    });*/
 
     //Start filtered
     $('#filter_paid').click();
@@ -167,4 +318,5 @@ $( document ).ready(function() {
     });
 });
 </script>
+
 [% END %]
diff --git a/members/pay.pl b/members/pay.pl
index e70e195146..d5addc76a6 100755
--- a/members/pay.pl
+++ b/members/pay.pl
@@ -132,6 +132,9 @@ for (@names) {
     } elsif (/^wo_indiv_(\d+)$/) {
         my $line_no = $1;
         redirect_to_paycollect( 'writeoff_individual', $line_no );
+    } elsif (/^markinv_indiv_(\d+)$/) {
+        my $line_no = $1;
+        mark_as_invoiced( $line_no );
     }
 }
 
@@ -145,6 +148,16 @@ add_accounts_to_template();
 
 output_html_with_http_headers $input, $cookie, $template->output;
 
+
+sub mark_as_invoiced {
+    my $line_no = shift;
+    my $line = Koha::Account::Lines->find($line_no);
+    my $debit_type_code = $line->debit_type_code;
+    $line->debit_type_code($debit_type_code . "_INVOICED");
+    $line->store;
+    return;
+}
+
 sub add_accounts_to_template {
 
     my $patron = Koha::Patrons->find( $borrowernumber );
diff --git a/opac/opac-account.pl b/opac/opac-account.pl
index 8ba2ba33f8..3c709f44ca 100755
--- a/opac/opac-account.pl
+++ b/opac/opac-account.pl
@@ -27,6 +27,11 @@ use C4::Output;
 use Koha::Account::Lines;
 use Koha::Patrons;
 use Koha::Plugins;
+use Data::UUID;
+
+
+my $ug = Data::UUID->new;
+my $guid =  $ug->to_string($ug->create());
 
 my $query = new CGI;
 my ( $template, $borrowernumber, $cookie ) = get_template_and_user(
@@ -45,6 +50,8 @@ my $accountlines = $account->lines->search({ amountoutstanding => { '>=' => 0 }}
 my $total_outstanding = $accountlines->total_outstanding;
 my $outstanding_credits = $account->outstanding_credits;
 
+
+
 if ( C4::Context->preference('AllowPatronToSetFinesVisibilityForGuarantor')
     || C4::Context->preference('AllowStaffToSetFinesVisibilityForGuarantor')
   )
@@ -72,9 +79,11 @@ if ( C4::Context->preference('AllowPatronToSetFinesVisibilityForGuarantor')
     $template->param( relatives => \@relatives );
 }
 
-
 $template->param(
     ACCOUNT_LINES       => $accountlines,
+    current_lang        => C4::Languages::getlanguage, 
+    guid                => $guid,
+    staffClientBaseURL  => C4::Context->preference('staffClientBaseURL'),
     total               => $total_outstanding,
     outstanding_credits => $outstanding_credits,
     accountview         => 1,
diff --git a/svc/create_testpayments b/svc/create_testpayments
new file mode 100755
index 0000000000..ef9e610b5f
--- /dev/null
+++ b/svc/create_testpayments
@@ -0,0 +1,78 @@
+#!/usr/bin/perl
+use strict;
+use warnings;
+use CGI qw ( -utf8 );
+use JSON;
+use C4::Auth qw/check_api_auth/;
+use Koha::Account::Lines;
+
+my $query = new CGI;
+binmode STDOUT, ':encoding(UTF-8)';
+
+my ($status, $cookie, $sessionID) = check_api_auth($query, {editcatalogue => 'edit_catalogue'});
+unless ($status eq "ok") {
+  print $query->header(-type => 'text/json', -status => '403 Forbidden');
+  print encode_json({status => $status});
+  exit 0;
+}
+
+my $borrower = Koha::Patrons->search({userid => "createaccountlines"})->next;
+unless ($borrower) {
+  print $query->header(-type => 'text/json', -status => '404 Not found');
+  print encode_json({status => 'Borrower not found'});
+  exit 0;
+}
+my $borrowernumber = $borrower->unblessed->{'borrowernumber'};
+
+my $oldaccountlines = Koha::Account::Lines->search({borrowernumber => $borrowernumber});
+$oldaccountlines->delete();
+
+my $account = Koha::Account->new({patron_id => $borrowernumber});
+
+$account->add_debit({
+    amount => "100",
+    note => "Created by create_testpayments script",
+    interface => "intranet",
+    type => "LOST",
+    item_id => 1350206,
+  });
+
+$account->add_debit({
+    amount => "150",
+    note => "Created by create_testpayments script",
+    interface => "intranet",
+    type => "LOST_INVOICED",
+    item_id => 1352903,
+  });
+
+$account->add_debit({
+    amount => "200",
+    note => "Created by create_testpayments script",
+    interface => "intranet",
+    type => "A",
+  });
+
+my $accountline;
+$accountline = $account->add_debit({
+    amount => "250",
+    note => "Created by create_testpayments script",
+    interface => "intranet",
+    type => "OVERDUE",
+    item_id => 1357852,
+  });
+$accountline->status("RETURNED");
+$accountline->store();
+
+$accountline = $account->add_debit({
+    amount => "300",
+    note => "Created by create_testpayments script",
+    interface => "intranet",
+    type => "OVERDUE",
+    item_id => 1916769,
+  });
+$accountline->status("UNRETURNED");
+$accountline->store();
+
+
+print $query->header(-type => 'text/json', -charset => 'utf-8');
+print encode_json({status => "created"});
diff --git a/svc/onlinepayment b/svc/onlinepayment
new file mode 100755
index 0000000000..fcd62f86ae
--- /dev/null
+++ b/svc/onlinepayment
@@ -0,0 +1,76 @@
+#!/usr/bin/perl
+use strict;
+use warnings;
+use CGI qw ( -utf8 );
+use JSON;
+use C4::Auth qw/check_api_auth/;
+use Koha::Account::Lines;
+
+my $query = new CGI;
+binmode STDOUT, ':encoding(UTF-8)';
+
+my ($status, $cookie, $sessionID) = check_api_auth($query, {editcatalogue => 'edit_catalogue'});
+unless ($status eq "ok") {
+  print $query->header(-type => 'text/json', -status => '403 Forbidden');
+  print encode_json({status => $status});
+  exit 0;
+}
+
+my $userid = $query->param('userid');
+my $password = $query->param('password');
+my $data = $query->param('POSTDATA');
+
+my $json = eval{decode_json($data)};
+if ($@) {
+  print $query->header(-type => 'text/json', -status => '400 Bad Request');
+  print encode_json({status => "Invalid json"});
+  exit 0;
+}
+
+my $payment_proxy_id = $json->{payment_proxy_id};
+my $payment_portal_id = $json->{payment_portal_id};
+my $payments = $json->{payments};
+
+unless ($payment_proxy_id and $payment_portal_id and $payments) {
+  print $query->header(-type => 'text/json', -status => '400 Bad Request');
+  print encode_json({status => "Missing mandatory json parameter"});
+  exit 0;
+}
+
+my $payment_note = "payment_proxy_id: " . $payment_proxy_id . "; " . "payment_portal_id: " . $payment_portal_id;
+my $accountlines_id;
+my $line;
+my $borrowernumber;
+my $amount;
+my $payment_id;
+
+for my $payment(@{$payments}) {
+  $accountlines_id = $payment;
+  $line = Koha::Account::Lines->find($accountlines_id);
+  unless ($line) {
+    print $query->header(-type => 'text/json', -status => '404 Not Found');
+    print encode_json({status => "Payment not found"});
+    exit 0;
+  }
+  unless (($line->amountoutstanding > 0) or ($line->amountoutstanding < 0)) {
+    print $query->header(-type => 'text/json', -status => '400 Bad Request');
+    print encode_json({status => "Invalid balance"});
+    exit 0;
+  }
+}
+
+for my $payment(@{$payments}) {
+  $accountlines_id = $payment;
+  $line = Koha::Account::Lines->find($accountlines_id);
+  $borrowernumber = $line->borrowernumber;
+  $amount = $line->amount;
+
+  $payment_id = Koha::Account->new({patron_id => $borrowernumber})->pay({
+    lines        => [$line],
+    amount       => $amount,
+    note         => $payment_note,
+    interface    => 'opac'
+  });
+};
+
+print $query->header(-type => 'text/json', -charset => 'utf-8');
